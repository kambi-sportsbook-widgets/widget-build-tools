#!/usr/bin/env node
"use strict";
var fs = require('fs');
var json_merger = require('../json_merger.js');
/***************************************************************************************************
*  main
***************************************************************************************************/
var input = process.argv[2];
var user_args = process.argv.slice(3);

var r_keyValue = /^(.*?)=(.*?)$/;

var pretty;
var javascript;
var variables = {};

var var_gate = false;

if ( input == '-h' || input == '--help' ) {
	console.log('');
	console.log('usage:');
	console.log('  json_merger inputFile [...options]')
	console.log('');
	console.log('options:')
	console.log('  --help, -h                    Show this page');
	console.log('  --pretty, -p                  Prettify the output json');
	console.log('  --javascript, -j              Perserve JavaScript functions, regexp, etc');
	console.log('  --variables, -v               Send key=value list of variables');
	console.log('                                  Usage: -v key1=value1 key2=value2');
}
else {
	user_args.forEach(function(arg, key) {
		if ( arg == '-p' || arg == '--pretty' ) {
			pretty = true;
		}
		else if ( arg == '-j' || arg == '--javascript' ) {
			javascript = true;
		}
		// Open the var_gate meaning that the next options will be key->value variables
		else if ( arg == '-v' || arg == '--variables' ) {
			var_gate = true;
		}
		// Match variables for key->value:
		//   key1=value1
		else if ( var_gate && r_keyValue.test(arg) ) {
			var match = arg.match(r_keyValue);

			variables[match[1]] = match[2];
		}
		else {
			var_gate = false;
		}
	});

	if ( input == null || !fs.existsSync(input) ) {
		console.log('Requires filename as first argument');
	}
	else {
		var output = json_merger.fromFile(input, {
			asText: pretty ? 'pretty' : true,
			javascript: javascript,
			variables: variables,
			scope: process.cwd()
		});

		console.log(output);
	}
}
